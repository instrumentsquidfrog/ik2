def func4(arg10, arg11):
    var49 = func5(arg10, arg11)
    var54 = func11(arg11, var49)
    var55 = arg10 + var54
    var56 = var49 | (-2026297581 - var54) + -610
    var57 = -421 - arg10
    var58 = var55 + (var56 | var57)
    var59 = var54 | 884 + (-461 ^ var56)
    var60 = arg10 - var49
    if var49 < arg10:
        var61 = var60 - var55
    else:
        var61 = (var57 & -2104387492) ^ var55 + -676
    var62 = var54 & var60
    var63 = var55 & (var49 - arg11)
    var64 = ((var56 & arg11) & -824702963) - arg10
    var65 = var55 & arg11 & var57
    var66 = (var63 & var64) & arg11 - var57
    var67 = var49 | var62 ^ -667261239
    result = var59 + var64
    return result
def func11(arg50, arg51):
    var52 = 0
    for var53 in xrange(12):
        var52 += arg50 & var52 + -2
    return var52
def func7(arg14, arg15):
    var19 = func8(arg14, arg15)
    var45 = func10(arg14, arg15)
    var46 = (var45 ^ var19 & 532) - (622 & (996897189 + (arg14 ^ var19)) ^ -1655079743 & -46 ^ -138) - (var45 & ((arg14 + -760) | ((var19 + 637) ^ 395 ^ ((var45 - arg15 + arg14) ^ arg14) + var45 + -1682058157)))
    var47 = (var19 & var46) | var46 - 72898936 ^ var45
    result = var19 ^ (var45 | (var45 & var19))
    return result
def func10(arg20, arg21):
    var22 = -874 - -768 | -1407694878 | -761
    var23 = 1140010400 & (arg20 & (arg20 & var22))
    var24 = (arg20 ^ -1662615549 - -1081157614) & -113
    var25 = (var24 + 735 & arg21) | -790
    var26 = var23 & (var24 - arg21) + var23
    var27 = var25 - var24
    var28 = 794 & -674 + arg21 - var22
    var29 = var26 & -285 - -406 | var23
    if var23 < var23:
        var30 = (var22 & (var27 | var28)) - arg20
    else:
        var30 = var24 | var23
    var31 = arg20 + (arg21 | var27 | 840)
    var32 = (arg21 + var22 & var24) | var23
    var33 = 620005269 | 470239864
    var34 = var29 | (-434 ^ var24 - 1540899258)
    var35 = (var27 - var26 ^ var22) - var34
    var36 = var25 | (arg20 & var24 - var26)
    var37 = (var34 | var23 - var27) ^ var27
    var38 = var27 ^ var37
    var39 = 814 ^ var29
    var40 = arg20 ^ var33
    var41 = var37 - var22
    var42 = var39 & ((640457906 & var22) & var35)
    var43 = arg21 ^ ((var41 + -1130964011) | var27)
    var44 = arg20 | var22 + var23
    result = 234 + var34
    return result
def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(33):
        var5.func3(arg1, arg2)
    var7 = (-1407682858 & arg1) | 445473414
    var8 = var7 | (-1518721692 & (arg2 + var7))
    var9 = (var7 & -582) | (arg1 & arg2 & arg1 + arg2) | (-177 - (-303 ^ var7 - 786))
    result = arg1 ^ var9
    return result
class class2(object):
    def func3(self, arg3, arg4):
        result = ((1558689676 + (arg4 ^ arg3 | 1) ^ -48546116) - 1373690367) - 0
        return result
def func8(arg16, arg17):
    closure = [0]
    def func9(acc, rest):
        var18 = (closure[0] & (8 - (rest ^ rest)) + acc) & 8 + -3
        closure[0] += var18
        if acc == 0:
            return var18
        else:
            result = func9(acc - 1, var18)
            return result
    result = func9(10, 0)
    return result
def func5(arg12, arg13):
    def func6(acc, rest):
        var48 = func7(5, rest)
        if acc == 0:
            return var48
        else:
            result = func6(acc - 1, var48)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 10'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg10, arg11):
    var49 = func5(arg10, arg11)
    var54 = func11(arg11, var49)
    var55 = arg10 + var54
    var56 = var49 | (-2026297581 - var54) + -610
    var57 = -421 - arg10
    var58 = var55 + (var56 | var57)
    var59 = var54 | 884 + (-461 ^ var56)
    var60 = arg10 - var49
    if var49 < arg10:
        var61 = var60 - var55
    else:
        var61 = (var57 & -2104387492) ^ var55 + -676
    var62 = var54 & var60
    var63 = var55 & (var49 - arg11)
    var64 = ((var56 & arg11) & -824702963) - arg10
    var65 = var55 & arg11 & var57
    var66 = (var63 & var64) & arg11 - var57
    var67 = var49 | var62 ^ -667261239
    result = var59 + var64
    return result
def func11(arg50, arg51):
    var52 = 0
    for var53 in xrange(12):
        var52 += arg50 & var52 + -2
    return var52
def func7(arg14, arg15):
    var19 = func8(arg14, arg15)
    var45 = func10(arg14, arg15)
    var46 = (var45 ^ var19 & 532) - (622 & (996897189 + (arg14 ^ var19)) ^ -1655079743 & -46 ^ -138) - (var45 & ((arg14 + -760) | ((var19 + 637) ^ 395 ^ ((var45 - arg15 + arg14) ^ arg14) + var45 + -1682058157)))
    var47 = (var19 & var46) | var46 - 72898936 ^ var45
    result = var19 ^ (var45 | (var45 & var19))
    return result
def func10(arg20, arg21):
    var22 = -874 - -768 | -1407694878 | -761
    var23 = 1140010400 & (arg20 & (arg20 & var22))
    var24 = (arg20 ^ -1662615549 - -1081157614) & -113
    var25 = (var24 + 735 & arg21) | -790
    var26 = var23 & (var24 - arg21) + var23
    var27 = var25 - var24
    var28 = 794 & -674 + arg21 - var22
    var29 = var26 & -285 - -406 | var23
    if var23 < var23:
        var30 = (var22 & (var27 | var28)) - arg20
    else:
        var30 = var24 | var23
    var31 = arg20 + (arg21 | var27 | 840)
    var32 = (arg21 + var22 & var24) | var23
    var33 = 620005269 | 470239864
    var34 = var29 | (-434 ^ var24 - 1540899258)
    var35 = (var27 - var26 ^ var22) - var34
    var36 = var25 | (arg20 & var24 - var26)
    var37 = (var34 | var23 - var27) ^ var27
    var38 = var27 ^ var37
    var39 = 814 ^ var29
    var40 = arg20 ^ var33
    var41 = var37 - var22
    var42 = var39 & ((640457906 & var22) & var35)
    var43 = arg21 ^ ((var41 + -1130964011) | var27)
    var44 = arg20 | var22 + var23
    result = 234 + var34
    return result
def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(33):
        var5.func3(arg1, arg2)
    var7 = (-1407682858 & arg1) | 445473414
    var8 = var7 | (-1518721692 & (arg2 + var7))
    var9 = (var7 & -582) | (arg1 & arg2 & arg1 + arg2) | (-177 - (-303 ^ var7 - 786))
    result = arg1 ^ var9
    return result
class class2(object):
    def func3(self, arg3, arg4):
        result = ((1558689676 + (arg4 ^ arg3 | 1) ^ -48546116) - 1373690367) - 0
        return result
def func8(arg16, arg17):
    closure = [0]
    def func9(acc, rest):
        var18 = (closure[0] & (8 - (rest ^ rest)) + acc) & 8 + -3
        closure[0] += var18
        if acc == 0:
            return var18
        else:
            result = func9(acc - 1, var18)
            return result
    result = func9(10, 0)
    return result
def func5(arg12, arg13):
    def func6(acc, rest):
        var48 = func7(5, rest)
        if acc == 0:
            return var48
        else:
            result = func6(acc - 1, var48)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 10'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg10, arg11):
    var49 = func5(arg10, arg11)
    var54 = func11(arg11, var49)
    var55 = arg10 + var54
    var56 = var49 | (-2026297581 - var54) + -610
    var57 = -421 - arg10
    var58 = var55 + (var56 | var57)
    var59 = var54 | 884 + (-461 ^ var56)
    var60 = arg10 - var49
    if var49 < arg10:
        var61 = var60 - var55
    else:
        var61 = (var57 & -2104387492) ^ var55 + -676
    var62 = var54 & var60
    var63 = var55 & (var49 - arg11)
    var64 = ((var56 & arg11) & -824702963) - arg10
    var65 = var55 & arg11 & var57
    var66 = (var63 & var64) & arg11 - var57
    var67 = var49 | var62 ^ -667261239
    result = var59 + var64
    return result
def func11(arg50, arg51):
    var52 = 0
    for var53 in xrange(12):
        var52 += arg50 & var52 + -2
    return var52
def func7(arg14, arg15):
    var19 = func8(arg14, arg15)
    var45 = func10(arg14, arg15)
    var46 = (var45 ^ var19 & 532) - (622 & (996897189 + (arg14 ^ var19)) ^ -1655079743 & -46 ^ -138) - (var45 & ((arg14 + -760) | ((var19 + 637) ^ 395 ^ ((var45 - arg15 + arg14) ^ arg14) + var45 + -1682058157)))
    var47 = (var19 & var46) | var46 - 72898936 ^ var45
    result = var19 ^ (var45 | (var45 & var19))
    return result
def func10(arg20, arg21):
    var22 = -874 - -768 | -1407694878 | -761
    var23 = 1140010400 & (arg20 & (arg20 & var22))
    var24 = (arg20 ^ -1662615549 - -1081157614) & -113
    var25 = (var24 + 735 & arg21) | -790
    var26 = var23 & (var24 - arg21) + var23
    var27 = var25 - var24
    var28 = 794 & -674 + arg21 - var22
    var29 = var26 & -285 - -406 | var23
    if var23 < var23:
        var30 = (var22 & (var27 | var28)) - arg20
    else:
        var30 = var24 | var23
    var31 = arg20 + (arg21 | var27 | 840)
    var32 = (arg21 + var22 & var24) | var23
    var33 = 620005269 | 470239864
    var34 = var29 | (-434 ^ var24 - 1540899258)
    var35 = (var27 - var26 ^ var22) - var34
    var36 = var25 | (arg20 & var24 - var26)
    var37 = (var34 | var23 - var27) ^ var27
    var38 = var27 ^ var37
    var39 = 814 ^ var29
    var40 = arg20 ^ var33
    var41 = var37 - var22
    var42 = var39 & ((640457906 & var22) & var35)
    var43 = arg21 ^ ((var41 + -1130964011) | var27)
    var44 = arg20 | var22 + var23
    result = 234 + var34
    return result
def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(33):
        var5.func3(arg1, arg2)
    var7 = (-1407682858 & arg1) | 445473414
    var8 = var7 | (-1518721692 & (arg2 + var7))
    var9 = (var7 & -582) | (arg1 & arg2 & arg1 + arg2) | (-177 - (-303 ^ var7 - 786))
    result = arg1 ^ var9
    return result
class class2(object):
    def func3(self, arg3, arg4):
        result = ((1558689676 + (arg4 ^ arg3 | 1) ^ -48546116) - 1373690367) - 0
        return result
def func8(arg16, arg17):
    closure = [0]
    def func9(acc, rest):
        var18 = (closure[0] & (8 - (rest ^ rest)) + acc) & 8 + -3
        closure[0] += var18
        if acc == 0:
            return var18
        else:
            result = func9(acc - 1, var18)
            return result
    result = func9(10, 0)
    return result
def func5(arg12, arg13):
    def func6(acc, rest):
        var48 = func7(5, rest)
        if acc == 0:
            return var48
        else:
            result = func6(acc - 1, var48)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 10'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg10, arg11):
    var49 = func5(arg10, arg11)
    var54 = func11(arg11, var49)
    var55 = arg10 + var54
    var56 = var49 | (-2026297581 - var54) + -610
    var57 = -421 - arg10
    var58 = var55 + (var56 | var57)
    var59 = var54 | 884 + (-461 ^ var56)
    var60 = arg10 - var49
    if var49 < arg10:
        var61 = var60 - var55
    else:
        var61 = (var57 & -2104387492) ^ var55 + -676
    var62 = var54 & var60
    var63 = var55 & (var49 - arg11)
    var64 = ((var56 & arg11) & -824702963) - arg10
    var65 = var55 & arg11 & var57
    var66 = (var63 & var64) & arg11 - var57
    var67 = var49 | var62 ^ -667261239
    result = var59 + var64
    return result
def func11(arg50, arg51):
    var52 = 0
    for var53 in xrange(12):
        var52 += arg50 & var52 + -2
    return var52
def func7(arg14, arg15):
    var19 = func8(arg14, arg15)
    var45 = func10(arg14, arg15)
    var46 = (var45 ^ var19 & 532) - (622 & (996897189 + (arg14 ^ var19)) ^ -1655079743 & -46 ^ -138) - (var45 & ((arg14 + -760) | ((var19 + 637) ^ 395 ^ ((var45 - arg15 + arg14) ^ arg14) + var45 + -1682058157)))
    var47 = (var19 & var46) | var46 - 72898936 ^ var45
    result = var19 ^ (var45 | (var45 & var19))
    return result
def func10(arg20, arg21):
    var22 = -874 - -768 | -1407694878 | -761
    var23 = 1140010400 & (arg20 & (arg20 & var22))
    var24 = (arg20 ^ -1662615549 - -1081157614) & -113
    var25 = (var24 + 735 & arg21) | -790
    var26 = var23 & (var24 - arg21) + var23
    var27 = var25 - var24
    var28 = 794 & -674 + arg21 - var22
    var29 = var26 & -285 - -406 | var23
    if var23 < var23:
        var30 = (var22 & (var27 | var28)) - arg20
    else:
        var30 = var24 | var23
    var31 = arg20 + (arg21 | var27 | 840)
    var32 = (arg21 + var22 & var24) | var23
    var33 = 620005269 | 470239864
    var34 = var29 | (-434 ^ var24 - 1540899258)
    var35 = (var27 - var26 ^ var22) - var34
    var36 = var25 | (arg20 & var24 - var26)
    var37 = (var34 | var23 - var27) ^ var27
    var38 = var27 ^ var37
    var39 = 814 ^ var29
    var40 = arg20 ^ var33
    var41 = var37 - var22
    var42 = var39 & ((640457906 & var22) & var35)
    var43 = arg21 ^ ((var41 + -1130964011) | var27)
    var44 = arg20 | var22 + var23
    result = 234 + var34
    return result
def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(33):
        var5.func3(arg1, arg2)
    var7 = (-1407682858 & arg1) | 445473414
    var8 = var7 | (-1518721692 & (arg2 + var7))
    var9 = (var7 & -582) | (arg1 & arg2 & arg1 + arg2) | (-177 - (-303 ^ var7 - 786))
    result = arg1 ^ var9
    return result
class class2(object):
    def func3(self, arg3, arg4):
        result = ((1558689676 + (arg4 ^ arg3 | 1) ^ -48546116) - 1373690367) - 0
        return result
def func8(arg16, arg17):
    closure = [0]
    def func9(acc, rest):
        var18 = (closure[0] & (8 - (rest ^ rest)) + acc) & 8 + -3
        closure[0] += var18
        if acc == 0:
            return var18
        else:
            result = func9(acc - 1, var18)
            return result
    result = func9(10, 0)
    return result
def func5(arg12, arg13):
    def func6(acc, rest):
        var48 = func7(5, rest)
        if acc == 0:
            return var48
        else:
            result = func6(acc - 1, var48)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 10'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
